!function(e,r){var a=e.module("baasic.membership",["baasic.api"]);!function(e,r,a){"use strict";r.service("baasicLoginRouteService",["baasicUriTemplateService",function(e){return{login:e.parse("login/{?embed,fields,options}"),parse:e.parse,social:{get:e.parse("login/social/{provider}/{?returnUrl}"),post:e.parse("login/social/{provider}/{?embed,fields,options}")}}}])}(e,a),function(e,r,a){"use strict";r.service("baasicLoginService",["baasicConstants","baasicApiService","baasicApiHttp","baasicAuthorizationService","baasicLoginRouteService",function(r,a,t,n,s){function i(){var e,r,a=/\+/g,t=/([^&=]+)=?([^&]*)/g,n=function(e){return decodeURIComponent(e.replace(a," "))},s=window.location.search.substring(1);for(e={};r=t.exec(s);)e[n(r[1])]=n(r[2]);return e}function o(r){var a=[];return e.forEach(r,function(e,r){a.push([encodeURIComponent(r),encodeURIComponent(e)].join("="))}),a.join("&")}return{login:function(r){var a=e.copy(r);if(a.options){var i=a.options;e.isArray(i)&&(a.options=i.join())}return t({url:s.login.expand(a),method:"POST",data:o({grant_type:"password",username:a.username,password:a.password}),headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}).success(function(e){n.updateAccessToken(e)})},loadUserData:function(e){return e=e||{},t.get(s.login.expand(e),{headers:{Accept:"application/json; charset=UTF-8"}})},logout:function(e,r){return t({url:s.login.expand({}),method:"DELETE",data:{token:e,type:r}}).success(function(){n.updateAccessToken(null)})},routeService:s,social:{get:function(e,r){var n={provider:e,returnUrl:r};return t.get(s.social.get.expand(a.findParams(n)))},post:function(e,i,o){var c={provider:e};return o&&(c.options=o),t({url:s.social.post.expand({provider:e,options:o}),method:"POST",data:a.createParams(i)[r.modelPropertyName],headers:{"Content-Type":"application/json; charset=UTF-8"}}).success(function(e){e&&!e.status&&n.updateAccessToken(e)})},parseResponse:function(e,r){var a=i(),t={};switch(e){case"twitter":t.oAuthToken=a.oauth_token,t.oAuthVerifier=a.oauth_verifier;break;default:t.code=a.code,t.returnUrl=r}return t}}}}])}(e,a),function(e,r,a){"use strict";r.service("baasicPasswordRecoveryRouteService",["baasicUriTemplateService",function(e){return{passwordRecovery:e.parse("recover-password"),parse:e.parse}}])}(e,a),function(e,r,a){"use strict";r.service("baasicPasswordRecoveryService",["baasicApiHttp","baasicPasswordRecoveryRouteService",function(e,r){return{requestReset:function(a){return e({url:r.passwordRecovery.expand({}),method:"POST",data:a})},reset:function(a){return e({url:r.passwordRecovery.expand({}),method:"PUT",data:a})},routeService:r}}])}(e,a),function(e,r,a){"use strict";r.service("baasicRegisterRouteService",["baasicUriTemplateService",function(e){return{create:e.parse("register"),activate:e.parse("register/activate/{activationToken}/")}}])}(e,a),function(e,r,a){"use strict";r.service("baasicRegisterService",["baasicApiHttp","baasicApiService","baasicConstants","baasicRegisterRouteService","baasicAuthorizationService",function(e,r,a,t,n){return{create:function(n){return e.post(t.create.expand({}),r.createParams(n)[a.modelPropertyName])},activate:function(a){var s=r.getParams(a,"activationToken");return e({url:t.activate.expand(s),method:"PUT"}).success(function(e){n.updateAccessToken(e)})},routeService:t}}])}(e,a),function(e,r,a){"use strict";r.service("baasicRoleRouteService",["baasicUriTemplateService",function(e){return{find:e.parse("lookups/roles/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("lookups/roles/{id}/{?embed,fields}"),create:e.parse("lookups/roles"),parse:e.parse}}])}(e,a),function(e,r,a){"use strict";r.service("baasicRoleService",["baasicApiHttp","baasicApiService","baasicConstants","baasicRoleRouteService",function(e,r,a,t){return{find:function(a){return e.get(t.find.expand(r.findParams(a)))},get:function(a,n){return e.get(t.get.expand(r.getParams(a,n)))},create:function(n){return e.post(t.create.expand({}),r.createParams(n)[a.modelPropertyName])},update:function(t){var n=r.updateParams(t);return e.put(n[a.modelPropertyName].links("put").href,n[a.modelPropertyName])},remove:function(t){var n=r.removeParams(t);return e.delete(n[a.modelPropertyName].links("delete").href)},routeService:t}}])}(e,a),function(e,r,a){"use strict";r.service("baasicUserRouteService",["baasicUriTemplateService",function(e){return{exists:e.parse("users/{username}/exists/"),find:e.parse("users/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("users/{username}/{?embed,fields}"),create:e.parse("users"),changePassword:e.parse("users/{username}/change-password"),parse:e.parse,socialLogin:{get:e.parse("users/{username}/social-login"),remove:e.parse("users/{username}/social-login/{provider}")}}}])}(e,a),function(e,r,a){"use strict";r.service("baasicUserService",["baasicApiHttp","baasicApiService","baasicConstants","baasicUserRouteService",function(r,a,t,n){return{exists:function(e,t){return r.get(n.exists.expand(a.getParams(e,t,"username")))},find:function(e){return r.get(n.find.expand(a.findParams(e)))},get:function(e){return r.get(n.get.expand(a.getParams(e,"username")))},create:function(e){return r.post(n.create.expand({}),a.createParams(e)[t.modelPropertyName])},update:function(e){var n=a.updateParams(e);return r.put(n[t.modelPropertyName].links("put").href,n[t.modelPropertyName])},remove:function(e){var n=a.removeParams(e);return r.delete(n[t.modelPropertyName].links("delete").href)},unlock:function(e){var n=a.updateParams(e);return r.put(n[t.modelPropertyName].links("unlock").href)},lock:function(e){var n=a.updateParams(e);return r.put(n[t.modelPropertyName].links("lock").href)},approve:function(e){var n=a.updateParams(e);return r.put(n[t.modelPropertyName].links("approve").href)},disapprove:function(e){var n=a.updateParams(e);return r.put(n[t.modelPropertyName].links("disapprove").href)},changePassword:function(e,a){return r({url:n.changePassword.expand({username:e}),method:"PUT",data:a})},routeService:n,socialLogin:{get:function(e){return r.get(n.socialLogin.get.expand({username:e}))},remove:function(t,s){var i;return i=s.hasOwnProperty("abrv")?{provider:s.abrv}:s.hasOwnProperty("id")?{provider:s.id}:e.extend({},s),i.username=t,r.delete(n.socialLogin.remove.expand(a.findParams(i)))}}}}])}(e,a)}(angular);