!function(e){var r=e.module("baasic.membership",["baasic.api"]);r.config(["$provide",function(){}]),function(e,r){"use strict";r.service("baasicLoginRouteService",["baasicUriTemplateService",function(e){return{login:e.parse("login/{?embed,fields,options}"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicLoginService",["baasicApiHttp","baasicLoginRouteService",function(r,a){return{routeService:a,login:function(s){var t=e.copy(s),n="grant_type=password&username="+t.userName+"&password="+t.password;if(t.options){var i=t.options;e.isArray(i)&&(t.options=i.join())}return r({url:a.login.expand(t),method:"POST",data:n,headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}})},loadUserData:function(e){return e=e||{},r.get(a.login.expand(e),{headers:{Accept:"application/json; charset=UTF-8"}})},logout:function(e,s){return r({url:a.login.expand({}),method:"DELETE",data:{token:e,type:s}})}}}])}(e,r),function(e,r){"use strict";r.service("baasicPasswordRecoveryRouteService",["baasicUriTemplateService",function(e){return{passwordRecovery:e.parse("recover-password"),changePassword:e.parse("recover-password/users/{userName}/change"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicPasswordRecoveryService",["baasicApiHttp","baasicPasswordRecoveryRouteService",function(e,r){return{routeService:r,requestReset:function(a){return e({url:r.passwordRecovery.expand({}),method:"POST",data:a})},reset:function(a){return e({url:r.passwordRecovery.expand({}),method:"PUT",data:a})},change:function(a,s){return e({url:r.changePassword.expand({userName:a}),method:"PUT",data:s})}}}])}(e,r),function(e,r){"use strict";r.service("baasicUserRegisterRouteService",["baasicUriTemplateService",function(e){return{create:e.parse("register"),activate:e.parse("register/activate/{activationToken}/")}}])}(e,r),function(e,r){"use strict";r.service("baasicUserRegisterService",["baasicApiHttp","baasicApiService","baasicConstants","baasicUserRegisterRouteService",function(e,r,a,s){return{routeService:s,create:function(s){return e.post(routeService.create.expand({}),r.createParams(s)[a.modelPropertyName])},activate:function(a){var s=r.getParams(a,"activationToken");return e.put(routeService.activate.expand(s),{})}}}])}(e,r),function(e,r){"use strict";r.service("baasicRoleRouteService",["baasicUriTemplateService",function(e){return{find:e.parse("roles/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("roles/{id}/{?embed,fields}"),create:e.parse("roles"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicRoleService",["baasicApiHttp","baasicApiService","baasicConstants","baasicRoleRouteService",function(e,r,a,s){return{routeService:s,find:function(a){return e.get(s.find.expand(r.findParams(a)))},get:function(a,t){return e.get(s.get.expand(r.getParams(a,t)))},create:function(t){return e.post(s.create.expand({}),r.createParams(t)[a.modelPropertyName])},update:function(s){var t=r.updateParams(s);return e.put(t[a.modelPropertyName].links("put").href,t[a.modelPropertyName])},remove:function(s){var t=r.removeParams(s);return e.delete(t[a.modelPropertyName].links("delete").href)}}}])}(e,r),function(e,r){"use strict";r.service("baasicUserRouteService",["baasicUriTemplateService",function(e){return{exists:e.parse("users/{userName}/exists/"),find:e.parse("users/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("users/{userName}/{?embed,fields}"),parse:e.parse,update:e.parse("users/{userName}/update"),create:e.parse("users"),sendPasswordRecovery:e.parse("users/{userName}/send-password-recovery"),approve:e.parse("users/{userName}/approve"),disapprove:e.parse("users/{userName}/disapprove"),lock:e.parse("users/{userName}/lock"),unlock:e.parse("users/{userName}/unlock"),remove:e.parse("users/{userName}")}}])}(e,r),function(e,r){"use strict";r.service("baasicUserService",["baasicApiHttp","baasicApiService","baasicConstants","baasicUserRouteService",function(e,r,a,s){return{routeService:s,exists:function(a,t){return e.get(s.exists.expand(r.getParams(a,t,"userName")))},find:function(a){return e.get(s.find.expand(r.findParams(a)))},get:function(a){return e.get(s.get.expand(r.getParams(a,"userName")))},create:function(t){return e.post(s.create.expand({}),r.createParams(t)[a.modelPropertyName])},update:function(t){return e.put(s.update.expand(r.findParams(t,"userName")),r.createParams(t)[a.modelPropertyName])},remove:function(a){return e.delete(s.remove.expand(r.findParams(a,"userName")),{})},unlock:function(a){return e.put(s.unlock.expand(r.findParams(a,"userName")),{})},lock:function(a){return e.put(s.lock.expand(r.findParams(a,"userName")),{})},sendPasswordRecovery:function(t){return e.put(s.sendPasswordRecovery.expand(r.findParams(t,"userName")),r.createParams(t)[a.modelPropertyName])},approve:function(a){return e.put(s.approve.expand(r.findParams(a,"userName")),{})},disapprove:function(a){return e.put(s.disapprove.expand(r.findParams(a,"userName")),{})}}}])}(e,r)}(angular);