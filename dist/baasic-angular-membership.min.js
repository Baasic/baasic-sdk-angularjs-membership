!function(e){var r=e.module("baasic.baasicMembership",["baasic.baasicApi"]);r.config(["$provide",function(){}]),function(e,r){"use strict";r.service("baasicLoginRouteService",["baasicUriTemplateService",function(e){return{login:e.parse("login/{?embed,fields,options}"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicLoginService",["baasicApiHttp","baasicLoginRouteService",function(r,a){return{routeService:a,login:function(t){var n=e.copy(t),i="grant_type=password&username="+n.username+"&password="+n.password;if(n.options){var s=n.options;e.isArray(s)&&(n.options=s.join())}return r({url:a.login.expand(n),method:"POST",data:i,headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}})},loadUserData:function(e){return e=e||{},r.get(a.login.expand(e),{headers:{Accept:"application/json; charset=UTF-8"}})},logout:function(e,t){return r({url:a.login.expand({}),method:"DELETE",data:{token:e,type:t}})}}}])}(e,r),function(e,r){"use strict";r.service("baasicPasswordRecoveryRouteService",["baasicUriTemplateService",function(e){return{passwordRecovery:e.parse("RecoverPassword"),changePassword:e.parse("RecoverPassword/user/{username}/change"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicPasswordRecoveryService",["baasicApiHttp","baasicPasswordRecoveryRouteService",function(e,r){return{routeService:r,requestReset:function(a){return e({url:r.passwordRecovery.expand({}),method:"POST",data:a})},reset:function(a){return e({url:r.passwordRecovery.expand({}),method:"PUT",data:a})},change:function(a,t){return e({url:r.changePassword.expand({username:a}),method:"PUT",data:t})}}}])}(e,r),function(e,r){"use strict";r.service("baasicRoleRouteService",["baasicUriTemplateService",function(e){return{find:e.parse("role/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("role/{roleId}/{?embed,fields}"),create:e.parse("role"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicRoleService",["baasicApiHttp","baasicApiService","baasicConstants","baasicRoleRouteService",function(e,r,a,t){return{routeService:t,find:function(a){return e.get(t.find.expand(r.findParams(a)))},get:function(a){return e.get(t.get.expand(r.getParams(a,"roleId")))},create:function(n){return e.post(t.create.expand({}),r.createParams(n)[a.modelPropertyName])},update:function(t){var n=r.updateParams(t);return e.put(n[a.modelPropertyName].links("put").href,n[a.modelPropertyName])},remove:function(t){var n=r.removeParams(t);return e.delete(n[a.modelPropertyName].links("delete").href)}}}])}(e,r),function(e,r){"use strict";r.service("baasicUserRouteService",["baasicUriTemplateService",function(e){return{find:e.parse("user/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("user/{username}/{?embed,fields}"),create:e.parse("user"),activate:e.parse("user/activate/{activationToken}/"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicUserService",["baasicApiHttp","baasicApiService","baasicConstants","baasicUserRouteService",function(e,r,a,t){return{routeService:t,find:function(a){return e.get(t.find.expand(r.findParams(a)))},get:function(a){return e.get(t.get.expand(r.getParams(a,"username")))},create:function(n){return e.post(t.create.expand({}),r.createParams(n)[a.modelPropertyName])},update:function(t){var n=r.updateParams(t);return e.put(n[a.modelPropertyName].links("put").href,n[a.modelPropertyName])},remove:function(t){var n=r.removeParams(t);return e.delete(n[a.modelPropertyName].links("delete").href)},unlock:function(t){var n=r.updateParams(t);return e.put(n[a.modelPropertyName].links("unlock").href,{})},lock:function(t){var n=r.updateParams(t);return e.put(n[a.modelPropertyName].links("lock").href,{})},activate:function(a){var n=r.getParams(a,"activationToken");return e.put(t.activate.expand(n),{})}}}])}(e,r)}(angular);