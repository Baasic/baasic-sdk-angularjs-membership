!function(e){var r=e.module("baasic.membership",["baasic.api"]);!function(e,r){"use strict";r.service("baasicLoginRouteService",["baasicUriTemplateService",function(e){return{login:e.parse("login/{?embed,fields,options}"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicLoginService",["baasicApiHttp","baasicLoginRouteService",function(r,a){return{routeService:a,login:function(t){var s=e.copy(t),i="grant_type=password&username="+s.username+"&password="+s.password;if(s.options){var n=s.options;e.isArray(n)&&(s.options=n.join())}return r({url:a.login.expand(s),method:"POST",data:i,headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}})},loadUserData:function(e){return e=e||{},r.get(a.login.expand(e),{headers:{Accept:"application/json; charset=UTF-8"}})},logout:function(e,t){return r({url:a.login.expand({}),method:"DELETE",data:{token:e,type:t}})}}}])}(e,r),function(e,r){"use strict";r.service("baasicPasswordRecoveryRouteService",["baasicUriTemplateService",function(e){return{passwordRecovery:e.parse("recover-password"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicPasswordRecoveryService",["baasicApiHttp","baasicPasswordRecoveryRouteService",function(e,r){return{routeService:r,requestReset:function(a){return e({url:r.passwordRecovery.expand({}),method:"POST",data:a})},reset:function(a){return e({url:r.passwordRecovery.expand({}),method:"PUT",data:a})}}}])}(e,r),function(e,r){"use strict";r.service("baasicRegisterRouteService",["baasicUriTemplateService",function(e){return{create:e.parse("register"),activate:e.parse("register/activate/{activationToken}/")}}])}(e,r),function(e,r){"use strict";r.service("baasicRegisterService",["baasicApiHttp","baasicApiService","baasicConstants","baasicRegisterRouteService",function(e,r,a,t){return{routeService:t,create:function(s){return e.post(t.create.expand({}),r.createParams(s)[a.modelPropertyName])},activate:function(a){var s=r.getParams(a,"activationToken");return e.put(t.activate.expand(s),{})}}}])}(e,r),function(e,r){"use strict";r.service("baasicRoleRouteService",["baasicUriTemplateService",function(e){return{find:e.parse("roles/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("roles/{id}/{?embed,fields}"),create:e.parse("roles"),parse:e.parse}}])}(e,r),function(e,r){"use strict";r.service("baasicRoleService",["baasicApiHttp","baasicApiService","baasicConstants","baasicRoleRouteService",function(e,r,a,t){return{routeService:t,find:function(a){return e.get(t.find.expand(r.findParams(a)))},get:function(a,s){return e.get(t.get.expand(r.getParams(a,s)))},create:function(s){return e.post(t.create.expand({}),r.createParams(s)[a.modelPropertyName])},update:function(t){var s=r.updateParams(t);return e.put(s[a.modelPropertyName].links("put").href,s[a.modelPropertyName])},remove:function(t){var s=r.removeParams(t);return e["delete"](s[a.modelPropertyName].links("delete").href)}}}])}(e,r),function(e,r){"use strict";r.service("baasicUserRouteService",["baasicUriTemplateService",function(e){return{exists:e.parse("users/{username}/exists/"),find:e.parse("users/{?searchQuery,page,rpp,sort,embed,fields}"),get:e.parse("users/{username}/{?embed,fields}"),parse:e.parse,create:e.parse("users"),changePassword:e.parse("users/{username}/change-password")}}])}(e,r),function(e,r){"use strict";r.service("baasicUserService",["baasicApiHttp","baasicApiService","baasicConstants","baasicUserRouteService",function(e,r,a,t){return{routeService:t,exists:function(a,s){return e.get(t.exists.expand(r.getParams(a,s,"username")))},find:function(a){return e.get(t.find.expand(r.findParams(a)))},get:function(a){return e.get(t.get.expand(r.getParams(a,"username")))},create:function(s){return e.post(t.create.expand({}),r.createParams(s)[a.modelPropertyName])},update:function(t){var s=r.updateParams(t);return e.put(s[a.modelPropertyName].links("put").href,s[a.modelPropertyName])},remove:function(t){var s=r.removeParams(t);return e["delete"](s[a.modelPropertyName].links("delete").href)},unlock:function(t){var s=r.updateParams(t);return e.put(s[a.modelPropertyName].links("unlock").href)},lock:function(t){var s=r.updateParams(t);return e.put(s[a.modelPropertyName].links("lock").href)},approve:function(t){var s=r.updateParams(t);return e.put(s[a.modelPropertyName].links("approve").href)},disapprove:function(t){var s=r.updateParams(t);return e.put(s[a.modelPropertyName].links("disapprove").href)},changePassword:function(r,a){return e({url:t.changePassword.expand({username:r}),method:"PUT",data:a})}}}])}(e,r)}(angular);